
using System;
using System.Collections.Generic;
using Rockabilly.CoarseGrind.Descriptions;
using Rockabilly.Common;

namespace Rockabilly.CoarseGrind.Examples
{
	public class SimpleExample4 : Test
	{

		public override string DetailedDescription
		{
			get
			{
				return "This is the detailed description for SimpleExample4.  Use this field to describe what the test does and what its pass criteria are. Commas, \tTabs, \rCarriage Returns, \nLine Feeds, and \fForm Feed chars will be filtered out.";
			}
		}

		public override void PerformTest()
		{
			// This would be where you actually perform the test.  What a surprise, huh?
			// If setup fails, it will NOT be run.

			// You should log every little thing the test does.  That lessens the chance of needing to re-run when a bug happens.
			Log.Info("Deliberately throwing an exception");

			try
			{

				Log.Info("Calling doSomethingTwo()");
				//int return2 = doSomethingTwo();

				throw new NullReferenceException("This is a FAKE null pointer exception. Nothing's actually wrong.", new ArgumentException("Also a FAKE exception. Carry on."));
			}
			catch (Exception loggedException)
			{
				AddResult(GetResultForFailure(loggedException));

				// If you don't want to actually add a TestResult containing
				// the exception you can simply log it with the line below instead.
				// Log.ShowException(loggedException);
			}
		}

		public override bool Cleanup()
		{
			// This will ALWAYS be run, even if setup failed.
			return true;
		}

		public override string Identifier
		{
			get
			{
				// This can be anything but is typically a number generated by a test case management system.
				// It is generally easier to say that "Test ST7 failed" than "The string-based selection upper limit test failed."
				return "ST4";
			}
		}


		public override string Name
		{
			get
			{
				// This should be a human-readable name that describes the test in-brief
				return "Sample Test FOUR";
			}
		}

		public override string[] TestSuiteMemberships
		{
			get
			{
				return new String[] { "Simple", "All", "Example" };
			}
		}

	}
}